{"version":3,"sources":["App.js","serviceWorker.js","title.js","index.js"],"names":["ListItem","name","this","props","deleteItem","completeTask","data","map","element","className","type","checked","status","onChange","bind","style","textDecorationLine","onClick","deleteTask","Component","Boolean","window","location","hostname","match","headerStyle","background","color","textAlign","padding","fontsize","Header","TodoList","state","list","inputVal","setState","e","target","value","filter","forEach","index","item","push","Object","assign","handleChange","placeholder","addTask","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mOA6BeA,E,gKA1Bb,SAAWC,GACTC,KAAKC,MAAMC,WAAWH,K,0BAExB,SAAaA,GACXC,KAAKC,MAAME,aAAaJ,K,oBAE1B,WAAU,IAAD,OACP,OACE,6BAEIC,KAAKC,MAAMG,KAAKC,KAAI,SAAAC,GAClB,OACE,qBAAIC,UAAU,WAAd,UACE,uBAAOC,KAAK,WACVC,QAA4B,IAAnBH,EAAQI,OACjBC,SAAU,EAAKR,aAAaS,KAAK,EAAMN,EAAQP,QACjD,sBAAMc,MAAO,CAACC,mBAAuC,IAAnBR,EAAQI,OAAe,OAAS,gBAAlE,SAAoFJ,EAAQP,OAC5F,wBAAQQ,UAAU,SAASQ,QAAS,EAAKC,WAAWJ,KAAK,EAAMN,EAAQP,MAAvE,4BAL4BO,EAAQP,e,GAb7BkB,aCFHC,QACa,cAA7BC,OAAOC,SAASC,UACe,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2DCMR,IAAMC,EAAc,CAChBC,WAAY,UACZC,MAAO,UACPC,UAAW,SACXC,QAAS,OACTC,SAAS,YAIEC,EAjBf,WACI,OACI,wBAAQhB,MAAOU,EAAf,SACI,kDCENO,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,GACNC,SAAU,IAJA,E,2CAOd,WACOjC,KAAK+B,MAAME,UAChBjC,KAAKkC,SAAS,CACZF,KAAK,GAAD,mBAAMhC,KAAK+B,MAAMC,MAAjB,CAAuB,CACzBjC,KAAMC,KAAK+B,MAAME,SACjBvB,OAAQ,KAEVuB,SAAU,O,0BAGd,SAAaE,GACXnC,KAAKkC,SAAS,CACZD,SAAUE,EAAEC,OAAOC,U,wBAGvB,SAAWtC,GACT,IAAMK,EAAOJ,KAAK+B,MAAMC,KAAKM,QAAO,SAAAhC,GAAO,OAAIA,EAAQP,OAASA,KAChEC,KAAKkC,SAAS,CACZF,KAAM5B,M,0BAGV,SAAaL,GAAO,IAAD,OACX+B,EAAW,GACjB9B,KAAK+B,MAAMC,KAAKO,SAAQ,SAACjC,EAASkC,GAChC,GAAIlC,EAAQP,OAASA,EAAM,CACzB,IAAM0C,EAAO,EAAKV,MAAMC,KAAKQ,GAC7BV,EAASY,KAAKC,OAAOC,OAAO,GAAIH,EAAM,CAAC/B,OAAwB,IAAhB+B,EAAK/B,OAAe,EAAI,KACvE,EAAKwB,SAAS,CACZF,KAAMF,SAGRA,EAASY,KAAKpC,Q,oBAKpB,WACE,OACE,sBAAKC,UAAU,gBAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUH,KAAMJ,KAAK+B,MAAMC,KAAM9B,WAAYF,KAAKE,WAAWU,KAAKZ,MAChEG,aAAcH,KAAKG,aAAaS,KAAKZ,QACvC,mCACE,uBAAOQ,KAAK,OAAO6B,MAAOrC,KAAK+B,MAAME,SAAUtB,SAAUX,KAAK6C,aAAajC,KAAKZ,MAAO8C,YAAY,qBACnG,wBAAQvC,UAAU,UAAUQ,QAASf,KAAK+C,QAAQnC,KAAKZ,MAAvD,oC,GApDeiB,aA0DvB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SF6BlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ff736ceb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nclass ListItem extends Component {\n  deleteTask(name) {\n    this.props.deleteItem(name)\n  }\n  completeTask(name) {\n    this.props.completeTask(name)\n  }\n  render() {\n    return (\n      <ul>\n        {\n          this.props.data.map(element => {\n            return (\n              <li className=\"listItem\" key={element.name}>\n                <input type=\"checkbox\"\n                  checked={element.status === 1}\n                  onChange={this.completeTask.bind(this, element.name)}/>\n                <span style={{textDecorationLine: element.status === 0 ? 'none' : 'line-through'}}>{element.name}</span>\n                <button className=\"delete\" onClick={this.deleteTask.bind(this, element.name)}>删除</button>\n              </li>)\n        })\n      }\n      </ul>\n    )\n  }\n}\n\nexport default ListItem","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      window.location.hostname === '[::1]' ||\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) \r\n        {\r\n          checkValidServiceWorker(swUrl, config);\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else \r\n        {\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } \r\n              else\r\n              {\r\n                console.log('Content is cached for offline use.');\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>CGU Todo list</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#5F9EA0',\r\n    color: '#FFFFE0',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n    fontsize:'xx-large',\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ListItem from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Title from \"./title\"\n\nclass TodoList extends Component {\n  constructor() {\n    super()\n    this.state = {\n      list: [],\n      inputVal: ''\n    }\n  }\n  addTask() {\n    if (!this.state.inputVal) return\n    this.setState({\n      list: [...this.state.list, {\n        name: this.state.inputVal,\n        status: 0\n      }],\n      inputVal: ''\n    })\n  }\n  handleChange(e) {\n    this.setState({\n      inputVal: e.target.value\n    })\n  }\n  deleteItem(name) {\n    const data = this.state.list.filter(element => element.name !== name)\n    this.setState({\n      list: data\n    })\n  }\n  completeTask(name) {\n    const TodoList = []\n    this.state.list.forEach((element, index) => {\n      if (element.name === name) {\n        const item = this.state.list[index]\n        TodoList.push(Object.assign({}, item, {status: item.status === 0 ? 1 : 0}))\n        this.setState({\n          list: TodoList\n        })\n      } else {\n        TodoList.push(element)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"reactTodoList\">\n      <Title/>\n      <ListItem data={this.state.list} deleteItem={this.deleteItem.bind(this)}\n        completeTask={this.completeTask.bind(this)}/>\n      <footer>\n        <input type=\"text\" value={this.state.inputVal} onChange={this.handleChange.bind(this)} placeholder=\"添加todo\"></input>\n        <button className=\"addTodo\" onClick={this.addTask.bind(this)}>添加</button>\n      </footer>\n    </div>\n    )\n  }\n}\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n)\nserviceWorker.unregister();\n"],"sourceRoot":""}